# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lK7xVR4lZiWYY80HiW9tVTujLdZrnlSn
"""

import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.svm import SVC
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score

class StructuralPatternName:
    def __init__(self, <YOUR CODE HERE>) -> None:
        #<YOUR CODE HERE>

        """
        Initialize a class item with a list of classificators
        """

    def fit(self, <YOUR CODE HERE>):
        #<YOUR CODE HERE>
        """
        Fit classifiers from the initialization stage
        """

    def predict(self, <YOUR CODE HERE>):
        #<YOUR CODE HERE>
        """
        Get predicts from all the classifiers and return
        the most popular answers
        """

if __name__ == "__main__":
    # <YOUR CODE HERE>
    X, y = load_iris(return_X_y=True)
    X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2)

    scaler = StandardScaler()
    scaler.fit(X_train)
    X_train = scaler.transform(X_train)
    X_test = scaler.transform(X_test)

    model = SVC(kernel='linear')
    model.fit(X_train, y_train)

    predict = model.predict(X_test)

    print("Accuracy: {}".format(accuracy_score(y_test, predict)))



    """
    1. Load iris dataset
    2. Shuffle data and divide into train / test.
    3. Prepare classifiers to initialize <StructuralPatternName> class.
    4. Train the ensemble
    """

